<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.resume.dao.ResumeMapper">
	

<select id="list" resultType="resume" parameterType="resume" >
select
	resume_no
	, resume_title
	, user_id
	, to_char(resume_indate, 'yyyy-MM-dd HH:MI:SS') as resume_indate
from
	test_resume
where
	1 = 1
	<if test="searchText != null">
		and upper(trim(resume_title)) like '%' || upper(trim(#{searchText})) || '%'
	</if>
	<if test="!resume_position.equals('on') and resume_position != null">
		and resume_position = #{resume_position}
	</if>
	<if test="!resume_location.equals('on') and resume_position != null">
		and resume_location = #{resume_location}
	</if>
order by
	resume_no desc
</select>

<insert id="write" parameterType="resume">
insert into
	test_resume(
	resume_no
	, user_id
	, resume_title
	, resume_location
	, resume_position
	, resume_pr
	) values (
	test_resume_seq.nextval
	, #{user_id}
	, #{resume_title}
	, #{resume_location}
	, #{resume_position}
	, #{resume_pr}
	)
</insert>

<select id="detail" parameterType="int" resultType="resume">
select
	resume_no
	, resume_title
	, resume_location
	, resume_position
	, user_id
	, resume_pr
from
	test_resume
where
	resume_no = #{resume_no}
</select>

<delete id="delete" parameterType="resume">
	delete from
		test_resume
	where
		resume_no = #{resume_no}
	and
		user_id = #{user_id}
</delete>

<update id="update" parameterType="resume">
	update
		test_resume
	set
		resume_title = #{resume_title}
		, resume_location = #{resume_location}
		, resume_position = #{resume_position}
		, resume_pr = #{resume_pr}
	where
		resume_no = #{resume_no}
	and
		user_id = #{user_id}
</update>

</mapper>
